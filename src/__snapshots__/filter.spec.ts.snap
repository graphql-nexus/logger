// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parse !a 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": true,
    "originalInput": "!a",
    "path": Object {
      "descendents": false,
      "value": "a",
    },
  },
]
`;

exports[`parse * 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "*",
    "path": Object {
      "descendents": Object {
        "includeParent": false,
      },
      "value": "",
    },
  },
]
`;

exports[`parse *@* 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "*@*",
    "path": Object {
      "descendents": Object {
        "includeParent": false,
      },
      "value": "",
    },
  },
]
`;

exports[`parse *@1 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "eq",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "*@1",
    "path": Object {
      "descendents": Object {
        "includeParent": false,
      },
      "value": "",
    },
  },
]
`;

exports[`parse , ,  a, 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": Object {
      "descendents": false,
      "value": "a",
    },
  },
]
`;

exports[`parse ,,a,b 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": Object {
      "descendents": false,
      "value": "a",
    },
  },
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "b",
    "path": Object {
      "descendents": false,
      "value": "b",
    },
  },
]
`;

exports[`parse a 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": Object {
      "descendents": false,
      "value": "a",
    },
  },
]
`;

exports[`parse a,b 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a",
    "path": Object {
      "descendents": false,
      "value": "a",
    },
  },
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "b",
    "path": Object {
      "descendents": false,
      "value": "b",
    },
  },
]
`;

exports[`parse a:b 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "a:b",
    "path": Object {
      "descendents": false,
      "value": "a:b",
    },
  },
]
`;

exports[`parse app* 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "gte",
      "value": "trace",
    },
    "negate": false,
    "originalInput": "app*",
    "path": Object {
      "descendents": Object {
        "includeParent": true,
      },
      "value": "app",
    },
  },
]
`;

exports[`parse app*@* 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "app*@*",
    "path": Object {
      "descendents": Object {
        "includeParent": true,
      },
      "value": "app",
    },
  },
]
`;

exports[`parse app*@1 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "app*@*",
    "path": Object {
      "descendents": Object {
        "includeParent": true,
      },
      "value": "app",
    },
  },
]
`;

exports[`parse app@* 1`] = `
Array [
  Object {
    "level": Object {
      "comp": "eq",
      "value": "*",
    },
    "negate": false,
    "originalInput": "app@*",
    "path": Object {
      "descendents": false,
      "value": "app",
    },
  },
]
`;

exports[`parse syntax errors ! 1`] = `
"Invalid filter pattern: \\"!\\". Hint: Must pass a path (e.g. \\"foo\\") or descendent matcher (\\"*\\")

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors ** 1`] = `
"Invalid filter pattern: \\"**\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors *+ 1`] = `
"Invalid filter pattern: \\"*+\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors *a 1`] = `
"Invalid filter pattern: \\"*a\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors , 1`] = `
"Invalid filter pattern: \\",\\". Hint: There must be at least one pattern present.

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors <empty> 1`] = `
"Invalid filter pattern: \\"\\". Hint: There must be at least one pattern present.

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors @ 1`] = `
"Invalid filter pattern: \\"@\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors a! 1`] = `
"Invalid filter pattern: \\"a!\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors a+ 1`] = `
"Invalid filter pattern: \\"a+\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors a@ 1`] = `
"Invalid filter pattern: \\"a@\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors a@*! 1`] = `
"Invalid filter pattern: \\"a@*!\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors a@*+ 1`] = `
"Invalid filter pattern: \\"a@*+\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors a@*- 1`] = `
"Invalid filter pattern: \\"a@*-\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;

exports[`parse syntax errors a@+* 1`] = `
"Invalid filter pattern: \\"a@+*\\".

Syntax:

  (<path>|*)[@((<levelNum>|<levelLabel>)[+-]|*)][,<...>]

  <path>       = /^[A-z_]+[A-z_0-9]*$/
  <levelNum>   = 1     | 2     | 3    | 4    | 5     | 6
  <levelLabel> = trace | debug | info | warn | error | fatal

Examples:

    *           all paths at default level
    *@*         all paths at all levels
    *@info      all paths at info level
    *@3         all paths at info level
    *@3+        all paths at info level or higher
    *@3-        all paths at info level or lower
    app@*       app path at all levels
    app:foo     app:foo path at default level
    app,nexus   app and nexus paths at default level
    app:*       descendent paths of app at defualt level
    app:*@2+    descendent paths of app at debug level or higher
    app*@2+     app & descendent paths of app at debug level or higher
"
`;
